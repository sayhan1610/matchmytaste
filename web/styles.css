body {
    font-family: Arial, sans-serif;
    background-color: #111812;
    color: #ffffff;
    margin: 0;
    padding: 0;
  }
  
  .container {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
    background-color: #282828;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  h1 {
    text-align: center;
  }
  
  .buttons-container { 
    display: flex;
    justify-content: space-around;
    margin-bottom: 20px;
  }
  
  .button {
    --color: #00A97F;
    padding: 0.6em 1.5em; /* Reduced padding to make buttons smaller */
    margin: 0 10px; /* Added margin for extra space between buttons */
    background-color: transparent;
    border-radius: .3em;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    transition: .5s;
    font-weight: 400;
    font-size: 15px; /* Reduced font size to make buttons smaller */
    border: 1px solid;
    font-family: inherit;
    text-transform: uppercase;
    color: var(--color);
    z-index: 1;
  }
  
  .button::before, .button::after {
    content: '';
    display: block;
    width: 50px;
    height: 50px;
    transform: translate(-50%, -50%);
    position: absolute;
    border-radius: 50%;
    z-index: -1;
    background-color: var(--color);
    transition: 1s ease;
  }
  
  .button::before {
    top: -1em;
    left: -1em;
  }
  
  .button::after {
    left: calc(100% + 1em);
    top: calc(100% + 1em);
  }
  
  .button:hover::before, .button:hover::after {
    height: 410px;
    width: 410px;
  }
  
  .button:hover {
    color: rgb(10, 25, 30);
  }
  
  .button:active {
    filter: brightness(.8);
  }
  
  
  .search-container {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .search-container input[type="text"] {
    background-color: #282828; /* Updated background color */
    border: 1px solid #191815; /* Updated border */
    padding: 5px; /* Adjusted padding */
    color: #ffffff; /* Text color */
    max-width: 300px; /* Maximum width */
    width: 30%; /* Adjusted width */
    margin: 0; /* No margin */
    outline: 2px solid #383838; /* Outline color */
    height: 15px; /* Adjusted height */
    font-size: 16px; /* Adjusted font size */
    text-align: center; /* Text alignment */
    transition: all 1s; /* Transition effect */
    font-weight: bold; /* Font weight */
    font-family: 'Courier New', Courier, monospace; /* Font family */
  }
  
  .search-container input[type="text"]:hover,
  .search-container input[type="text"]:focus {
    background-color: #747474; /* Hover and focus background color */
    border-top-width: 0.2em; /* Adjusted border top width */
  }
  
  
  
  .search-container {
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    margin-bottom: 20px;
  }
  
  
  .search-container input[type="text"] {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 5px;
    margin-right: 10px; /* Space between input and button */
  }
  
  .search-container button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #e8e8e8;
    background-color: #191815;
    width: 50px;
    height: 50px;
    font-size: 20px;
    text-transform: uppercase;
    border: 2px solid #212121;
    border-radius: 10px;
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
    box-shadow: 5px 5px 2px rgba(0, 0, 0, 0.15),
      2px 2px 2px rgba(0, 0, 0, 0.1),
      -3px -3px 2px rgba(255, 255, 255, 0.05),
      -2px -2px 1px rgba(255, 255, 255, 0.05);
    overflow: hidden;
    cursor: pointer;
  }
  
  .search-container button .span {
    position: relative;
    z-index: 2;
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .search-container button::before {
    content: "";
    position: absolute;
    background-color: #e8e8e8;
    width: 100%;
    height: 100%;
    left: 0%;
    bottom: 0%;
    transform: translate(-100%, 100%);
    border-radius: 10px;
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .search-container button:hover::before {
    transform: translate(0, 0);
    transition-delay: 0.4s;
  }
  
  .search-container button:hover .span {
    scale: 1.2;
  }
  
  .search-container button:hover {
    box-shadow: none;
  }
  
  .search-container button:active {
    scale: 0.95;
  }
  
  
  #resultsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }
  
  .card {
    background-color: #191815;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .card h3 {
    margin-bottom: 10px;
  }
  
  .card p {
    font-size: 14px;
    color: #888888;
    margin-bottom: 15px;
  }
  
  .card a {
    display: block;
    background-color: #051118;
    color: #ffffff;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }
  
  .card a:hover {
    background-color: #130e09;
  }
  .glitch {
    position: relative;
    font-size: 25px;
    font-weight: 700;
    line-height: 1.2;
    color: #fff;
    letter-spacing: 5px;
    z-index: 1;
    overflow: hidden; /* Ensure the glitch effect stays within the h1 boundaries */
  }
  
  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  
  .glitch::before {
    animation: glitch1 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
    z-index: -1;
    color: #8b00ff;
  }
  
  .glitch::after {
    animation: glitch2 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
    z-index: -2;
    color: #00e571;
  }
  
  @keyframes glitch1 {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-3px, 3px);
    }
    40% {
      transform: translate(-3px, -3px);
    }
    60% {
      transform: translate(3px, 3px);
    }
    80% {
      transform: translate(3px, -3px);
    }
    to {
      transform: translate(0);
    }
  }
  
  @keyframes glitch2 {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(3px, -3px);
    }
    40% {
      transform: translate(3px, 3px);
    }
    60% {
      transform: translate(-3px, -3px);
    }
    80% {
      transform: translate(-3px, 3px);
    }
    to {
      transform: translate(0);
    }
  }
  